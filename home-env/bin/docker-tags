#!/usr/bin/env python3
import requests
import sys

class ImageRegistry:
    def __init__(self, image):
        self.image = image
        self._authorize_for_image()

    def _authorize_for_image(self):
        auth_url = f'https://auth.docker.io/token?service=registry.docker.io&scope=repository:{self.image}:pull'
        r = requests.get(auth_url)
        r.raise_for_status()
        self.token = r.json()['token']

    def get_tags(self):
        manifest_url = f'https://registry-1.docker.io/v2/{self.image}/tags/list'
        r = requests.get(manifest_url, headers=dict(
            Authorization=f'Bearer {self.token}'
        ))
        r.raise_for_status()
        return r.json()['tags']

    # def get_tag_digest(self, tag):
    #     manifest_url = 'https://registry-1.docker.io/v2/{}/manifests/{}'.format(
    #         self.image, tag)
    #     r = requests.get(manifest_url, headers=dict(
    #         Authorization='Bearer {}'.format(self.token),
    #         Accept='application/vnd.docker.distribution.manifest.v2+json',
    #     ))
    #     r.raise_for_status()
    #     return r.json()
    #     return r.json()['config']['digest']
img = sys.argv[1] if len(sys.argv)>1 else 'cribl/cribl'

ir = ImageRegistry(img)
for t in ir.get_tags():
    print(t)
# from pprint import pprint
# for t in tags:
#     pprint(ir.get_tag_digest(t))
#     break
