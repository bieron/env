#!/usr/bin/env python

# This script wraps i3status output and inject mail status, or just reports
# status on command line.  It is based on 'wrapper.py' script by Valentin
# Haenel, which could be found at:
# http://code.stapelberg.de/git/i3status/tree/contrib/wrapper.py
#
# To use it, ensure your ~/.i3status.conf contains this line:
#     output_format = "i3bar"
# in the 'general' section.
# Then, in your ~/.i3/config, use:
#     status_command i3status | path/to/check_mail.py ...
# In the 'bar' section.

import json
import os
import subprocess
import sys

def print_line(l):
    """ Non-buffered printing to stdout. """
    sys.stdout.write(l + '\n')
    sys.stdout.flush()

def read_line():
    """ Interrupted respecting reader for stdin. """
    # try reading a line, removing any extra whitespace
    try:
        l = sys.stdin.readline().strip()
        # i3status sends EOF, or an empty line
        if not l:
            sys.exit(3)
        return l
    except KeyboardInterrupt:
        sys.exit()

path_cache = {}
def get_git_state_cached(path):
    mtime = os.stat(path).st_mtime
    if path not in path_cache or path_cache[path][0] < mtime:
        path_cache[path] = (mtime, get_git_state(path))
    return path_cache[path][1]

def get_git_state(path):
    s = subprocess.check_output(['git', '--git-dir', path, 'status', '-szbuno', '--porcelain'])
    s = s[3:s.index('\0')]
    if '..origin/' in s:
        s = s.split('..origin/')[1]
    return path.split('/')[-2] + ': ' + s

# Skip the first line which contains the version header.
print_line(read_line())

# The second line contains the start of the infinite array.
print_line(read_line())

prefix = ''
while True:
    line = read_line()
    # ignore comma at start of lines
    if line.startswith(','):
        line = line[1:]

    j = json.loads(line)
    j.insert(0, dict(full_text=get_git_state_cached('/home/jb/dev/lz5/.git')))
    print_line(prefix+json.dumps(j))
    prefix = ','
